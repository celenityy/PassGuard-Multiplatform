import kotlin.Boolean;

CREATE TABLE IF NOT EXISTS PasswordEntity (
    id TEXT NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    organizationLogo TEXT,
    userName TEXT NOT NULL,
    password TEXT NOT NULL,
    createdTimeStamp TEXT,
    modifiedTimeStamp TEXT,
    syncedTimeStamp TEXT,
    syncStatus TEXT,
    isFavorite INTEGER AS Boolean DEFAULT 0,
    categoryId TEXT NOT NULL
);

insert:
INSERT OR REPLACE INTO PasswordEntity (id, title, organizationLogo, userName, password, createdTimeStamp, modifiedTimeStamp, syncedTimeStamp, syncStatus, isFavorite, categoryId) VALUES (?, ?, ?, ?, ?, ?, ?, ?,?,?, ?);

updateIsFavorite:
UPDATE PasswordEntity SET isFavorite = :isFavorite WHERE id = :id;

getUnsynchronised:
SELECT * FROM PasswordEntity WHERE syncStatus != 'SYNCED';

markAsSynced:
UPDATE PasswordEntity SET syncStatus = 'SYNCED', syncedTimeStamp = :syncedTimeStamp WHERE id = :id;

markAsDeleted:
UPDATE PasswordEntity SET syncStatus = 'DELETED' WHERE id = :id;

deleteMarkedAsDeleted:
DELETE FROM PasswordEntity WHERE syncStatus = 'DELETED';

getAll:
SELECT * FROM PasswordEntity;

deleteById:
DELETE FROM PasswordEntity WHERE id = :id;

deleteAll:
DELETE FROM PasswordEntity;